---
name: CI
"on":
  push: {}

jobs:
  test-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Reload Cache / pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # NOTE: container lacks OS dist for testresources/launchpadlib
      - name: Install requirements
        run: |
          pip install testresources==2.0.1
          make _deps
          pip install -r db/requirements.txt

      - name: Start database
        run: |
          sudo service postgresql start
          sudo -u postgres psql -c 'CREATE DATABASE nt'
          sudo -u postgres psql -c 'CREATE ROLE runner'
          sudo -u postgres psql -c "ALTER USER runner PASSWORD 'password'"
          sudo -u postgres psql -c 'ALTER USER runner WITH LOGIN SUPERUSER'
          sudo -u postgres psql -c 'ALTER DATABASE nt OWNER TO runner'
          psql -d nt -c 'ALTER DATABASE nt SET search_path TO nt'
          psql -l
          # This package uses relative imports, so can be called from outside
          python -m db.sql rebuild
          # Select versions (not a pass/fail test, but still viewable in logs)
          psql -d nt -c 'SELECT * FROM version'

      - name: Run Tests
        run: make _test

      - name: Run linters
        run: make _lint

      - name: Start server
        run: make _run &

      # NOTE: depends on API_PORT=20000
      - name: Integration test / basic request / 10 second startup
        run: |
          n=0
          set +e
          while [ $n != 20 ]; do
            n=$(expr $n + 1)
            echo $n
            sleep 0.5
            curl localhost:20000/api && break
          done;
          set -e

          # Do some basic validation, that we get HTTP 2XX/3XX & valid JSON
          curl -I -X GET localhost:20000/api
          curl localhost:20000/api/pg/version | jq
          curl localhost:20000/api/nutrients  | jq

  # Windows integration tests: Makefile, Sanic lint/test
  test-win32:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        # NOTE: skip submodules, we don't use DB. See below NOTE.

      - name: Change Line Endings / LF
        run: |
          git ls-files --eol
          git config core.autocrlf input
          git reset --hard
          git ls-files --eol

      - name: Test line endings
        run: |
          pip install doc8
          doc8 -q README.rst

      # - name: Reload Cache / pip
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.cache/pip
      #     key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pip-

      # # NOTE: skip Postgres setup for Windows, running w/o has value of its own
      # - name: Install requirements
      #   run: make _deps

      # - name: Run Tests
      #   run: make _test

      # - name: Run linters
      #   run: make _lint
